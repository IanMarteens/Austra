<?xml version="1.0" encoding="utf-8"?>
<topic id="008dce7e-55cd-4c37-997b-b0463d7c24d0" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>Splines are piecewise defined functions, using cubic polynomials, for interpolating or smoothing curves. Austra can create splines for time series, using dates as arguments, or for any pair of vectors containing abscissas and coordinates, respectively. There is also a shortcut for creating this second kind of splines given a grid on an interval and an arbitrary function.</para>
    </introduction>
    <section address="Splines">
      <title>Creating splines</title>
      <content>
        <para>All spline kinds are created using overloaded variants of the same class method:</para>
		<table>
	  	  <row>
	    	<entry><para><codeInline>spline::new</codeInline></para></entry>
	    	<entry><para>Creates a spline either from a <link xlink:href="1800e13a-baf2-48f8-aefa-746082fe23df">series</link>, a couple of <link xlink:href="aae4328b-9ead-40dc-b407-54e8d0614cd5">vectors</link>, or a grid and a <link xlink:href="9ebcc778-37a1-4313-87f9-1ea37494d2c8">lambda function</link>.</para></entry>
	  	  </row>
		</table>
		<para>This example shows how to create and use a spline based on a time series:</para>
		<code language="Austra">
<markup><b>let</b></markup> s = spline(appl) <markup><b>in</b></markup>
    s[appl.last.date - 15]
		</code>
		<para>The example creates a spline based on the series values, and then the spline is used to interpolate the value fifteen days before the last date stored in the series.</para>
		<para>At a first glance, it may seem than interpolating a daily series does not make sense, since AUSTRA dates do not include a time fraction. Nevertheless:</para>
		<list class="bullet">
		<listItem>Even daily series have gaps corresponding to holidays.</listItem>
		<listItem>You can still use a real value for interpolating a spline with date arguments.</listItem>
		</list>
		<para>The following formula, for example, finds what would be the value at a middle time between two consecutive dates:</para>
		<code language="Austra">
<markup><b>let</b></markup> s = spline(appl) <markup><b>let</b></markup>
    s[4@jul20.toInt + 0.5]
        </code>
		<para>We are adding half of a day, i.e., twelve hours, to the numerical equivalent of a date, if the stored values in the time series corresponds to each day’s midnight.</para>
		<para>Splines can also be used to interpolate existing data and functions:</para>
		<code language="Austra">
<markup><font color="DarkGreen">-- Use a function over a uniform grid.</font><br/>
<b>let</b></markup> s1 = spline(0, τ, 1024, cos);
s1[π/4] - sqrt(0.5);
s1.derivative(π/4);
<markup><font color="DarkGreen">-- Use two arbitrary vectors with the same length.</font><br/>
<b>let</b></markup> s2 = spline([1, 3, 4, 5], [0, 1, 0.8, 0]);
s2[2]
		</code>
		<sections>
		  <section address="splineMethods">
		  	<title>Indexers, methods and properties</title>
		  	<content>
		  	  <para>All splines have these four properties:</para>
			  <table>
	  	  		<row>
	    		  <entry><para><codeInline>area</codeInline></para></entry>
	    		  <entry><para>The total area below the spline. See <codeEntityReference qualifyHint="false">P:Austra.Library.Spline`1.Area</codeEntityReference>.</para></entry>
	  	  		</row>
	  	  		<row>
	    		  <entry><para><codeInline>first</codeInline></para></entry>
	    		  <entry><para>The lower bound for the abscissas. It is a date for splines based on series, and a double value, otherwise. See <codeEntityReference qualifyHint="false">P:Austra.Library.Spline`1.First</codeEntityReference>.</para></entry>
	  	  		</row>
	  	  		<row>
	    		  <entry><para><codeInline>last</codeInline></para></entry>
	    		  <entry><para>The upper bound for the abscissas. It is a date for splines based on series, and a double value, otherwise. See <codeEntityReference qualifyHint="false">P:Austra.Library.Spline`1.Last</codeEntityReference>.</para></entry>
	  	  		</row>
	  	  		<row>
	    		  <entry><para><codeInline>length</codeInline></para></entry>
	    		  <entry><para>Gets the number of polynomials in the spline. See <codeEntityReference qualifyHint="false">P:Austra.Library.Spline`1.Length</codeEntityReference>.</para></entry>
	  	  		</row>
			  </table>
			  <para>For instance, we can use it to approximate the area below a normal distribution:</para>
			  <code language="Austra">
<markup><font color="DarkGreen">-- The integral over a reasonable interval.</font></markup>
spline(-10, 10, 10000, x => exp(-x²)).area;
<markup><font color="DarkGreen">-- The expected result.</font></markup>
sqrt(π)
			  </code>
	  		  <alert class="note">
				<para>When <codeInline>area</codeInline> is used on a series-based spline, dates are automatically interpreted as real values, so a day equals the unit value.</para>
	  		  </alert>
		  	  <para>These are the methods implemented by splines:</para>
			  <table>
	  	  		<row>
	    		  <entry><para><codeInline>derivative</codeInline></para></entry>
	    		  <entry><para>Calculates the smoothed derivative at a given point of the spline range.</para></entry>
	  	  		</row>
	  	  		<row>
	    		  <entry><para><codeInline>poly</codeInline></para></entry>
	    		  <entry><para>Gets the cubic polynomial at a given index in the spline.</para></entry>
	  	  		</row>
			  </table>
		  	  <para>The <codeInline>poly</codeInline> method has two overloads: one receives an integer, and the other allows a C# <codeInline>Index</codeInline> as its argument:</para>
			  <code language="Austra">
<markup><font color="DarkGreen">-- Let’s define a spline with a function over a uniform grid.</font><br/>
<b>let</b></markup> s1 = spline(0, τ, 1024, cos);
<markup><font color="DarkGreen">-- Retrieve the polynomial for the first segment of the spline.</font></markup>
s1.poly(0);
<markup><font color="DarkGreen">-- Two alternatives for retrieving the last polynomial:</font></markup>
s1.poly(s1.length - 1);
s1.poly(^1);
			  </code>
			  <para>Polynomials retrieved with the <codeInline>poly</codeInline> method accepts values in the closed interval [0,1]. The spline interpolator must find the polynomial, subtract the initial argument for the corresponding segment and scale the remaining offset according to the length covered by the segment.</para>
			  <para>Each polynomial provides two methods, for evaluating its value and its derivative at a point in the closed interval [0,1], and one property, <codeInline>area</codeInline>, for evaluating the definitive interval of the polynomial over its valid interval:</para>
			  <table>
	  	  		<row>
	    		  <entry><para><codeInline>area</codeInline></para></entry>
	    		  <entry><para>The definite integral over the interval [0,1].</para></entry>
	  	  		</row>
	  	  		<row>
	    		  <entry><para><codeInline>eval</codeInline></para></entry>
	    		  <entry><para>Evaluates the polynomial at the given argument.</para></entry>
	  	  		</row>
	  	  		<row>
	    		  <entry><para><codeInline>derivative</codeInline></para></entry>
	    		  <entry><para>Gets the derivative of the polynomial.</para></entry>
	  	  		</row>
			  </table>
		  	</content>
		  </section>
		</sections>
      </content>
    </section>
    <relatedTopics>
      <codeEntityReference qualifyHint="false">T:Austra.Library.Spline`1</codeEntityReference>
      <codeEntityReference qualifyHint="false">T:Austra.Library.DateSpline</codeEntityReference>
      <codeEntityReference qualifyHint="false">T:Austra.Library.VectorSpline</codeEntityReference>
      <link xlink:href="e22b4127-e7a9-47ca-bd1c-7ac81efcc051">Primitive types</link>
	  <link xlink:href="90cb2899-abcf-4ebe-b96a-8cfac1b2809f">Code definitions</link>
      <link xlink:href="8b381718-bf08-4762-a51b-1516af27bef2">Local variables</link>
      <link xlink:href="9ebcc778-37a1-4313-87f9-1ea37494d2c8">Lambda functions</link>
      <link xlink:href="1800e13a-baf2-48f8-aefa-746082fe23df">Time series</link>
      <link xlink:href="aae4328b-9ead-40dc-b407-54e8d0614cd5">Vectors</link>
      <link xlink:href="d1757dd1-7bbd-4d90-88b9-cc034c5ad326">Sequences</link>
      <link xlink:href="e9d3be4d-ac7d-4b8e-b892-c47a5a0beb49">Matrices</link>
      <link xlink:href="95cad3a9-e319-4787-a66b-596e34e6ddd6">List comprehensions</link>
      <link xlink:href="e7993a1e-f2c5-4eb0-aa47-0a3f620375fc">Models</link>
    </relatedTopics>
  </developerConceptualDocument>
</topic>