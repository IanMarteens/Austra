<?xml version="1.0" encoding="utf-8"?>
<topic id="8b381718-bf08-4762-a51b-1516af27bef2" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>AUSTRA is a functional language, so it has a functional technique for declaring what in a procedural language would be temporal or local variables.</para>
    </introduction>
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>LET clauses</title>
      <content>
        <para>The functional technique for declaring local variables in a formula is the <legacyBold>let</legacyBold> clause.</para>
        <code language="Austra">
let m = matrix::lrandom(5),
    m1 = m * m',
    c = m1.chol in
    (c * c' - m1).aMax
        </code>
        <para>In the above example, a lower triangular random matrix is computed, and it is
multiplied by its transpose. Then, the Cholesky transform is calculated and finally
we check that the transform is valid, evaluating the absolute maximum of the
matrix difference.</para>
<para>The <codeInline>m</codeInline>, <codeInline>m1</codeInline> and <codeInline>c</codeInline> variables only exist while the formula is being evaluated.</para>
      </content>
    </section>
    <relatedTopics>
    	<link xlink:href="90cb2899-abcf-4ebe-b96a-8cfac1b2809f">Code definitions</link>
    </relatedTopics>
  </developerConceptualDocument>
</topic>