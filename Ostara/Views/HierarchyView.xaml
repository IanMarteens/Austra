<UserControl
    x:Class="Ostara.HierarchyView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:Ostara"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800">
    <Grid Background="#FF000004">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock
            Grid.Row="0"
            Text="Variables"
            Foreground="#FFB0B0B0"
            FontSize="17"
            FontWeight="DemiBold"
            Margin="12,5,0,1"
            VerticalAlignment="Stretch"/>
        <TreeView
            Grid.Row="1"
            ItemsSource="{Binding Classes}"
            Background="#FF161616"
            Margin="0">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type local:ClassNode}"
                                          ItemsSource="{Binding Nodes}">
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Stretch" Margin="0,1">
                        <TextBlock Text="{Binding Name}" Foreground="#FFD0D0D0"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type local:DefinitionNode}">
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Stretch"
                                ToolTip="{Binding Hint}">
                        <Image Height="16" Width="16" Margin="0,0,2,0">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="Source" Value="/images/tag.png"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TypeName}" Value="Matrix">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Source" Value="/images/matrix.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeName}" Value="LinearModel">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Source" Value="/images/linear.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeName}" Value="ARModel">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Source" Value="/images/model.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeName}" Value="VectorSpline">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Source" Value="/images/model.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeName}" Value="DateSpline">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Source" Value="/images/model.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeName}" Value="Series">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Source" Value="/images/series.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeName}" Value="FFT Model">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Source" Value="/images/waves.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeName}" Value="Vector">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Source" Value="/images/vector.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeName}" Value="ComplexVector">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Source" Value="/images/vector.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeName}" Value="MvoModel">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Source" Value="/images/mvo.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock Text="{Binding Name}" Foreground="#FFD0D0D0" Margin="2,1"/>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type local:VarNode}">
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Stretch"
                                ToolTip="{Binding Hint}">
                        <Image Height="16" Width="16" 
                               Source="{Binding ImageSource}"
                               Visibility="{Binding ImageVisibility}"
                               VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding Name}" Foreground="#FFD0D0D0" Margin="5,1,0,1" VerticalAlignment="Center"/>
                    </StackPanel>
                </DataTemplate>
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <EventSetter Event="Control.MouseDoubleClick" Handler="TreeViewDoubleClick"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TreeViewItem">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="19" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton IsChecked="False"
                                              ClickMode="Press"
                                              Name="Expander">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Style.Resources>
                                                    <ResourceDictionary />
                                                </Style.Resources>
                                                <Setter Property="UIElement.Focusable" Value="False"/>
                                                <Setter Property="FrameworkElement.Width" Value="16"/>
                                                <Setter Property="FrameworkElement.Height" Value="16"/>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Padding="5,5,5,5"
                                                                Background="#00FFFFFF"
                                                                Width="16"
                                                                Height="16">
                                                                <Path Fill="#FFFFFFFF"
                                                                  Stroke="#FF818181"
                                                                  Name="ExpandPath">
                                                                    <Path.Data>
                                                                        <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                    </Path.Data>
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                    <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF595959</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF262626</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                    <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF27C7F7</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FFCCEEFB</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="UIElement.IsMouseOver" Value="True"/>
                                                                        <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF1CC4F7</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF82DFFB</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        Padding="{TemplateBinding Control.Padding}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Background="{TemplateBinding Panel.Background}"
                                        Name="Bd"
                                        SnapsToDevicePixels="True"
                                        Grid.Column="1">
                                        <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}"
                                                      ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                      ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                      ContentSource="Header"
                                                      Name="PART_Header"
                                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                    <ItemsPresenter Name="ItemsHost"
                                                Grid.Column="1"
                                                Grid.Row="1"
                                                Grid.ColumnSpan="2" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                        <Setter Property="UIElement.Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="ItemsControl.HasItems" Value="False">
                                        <Setter Property="UIElement.Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                        <Setter Property="Panel.Background" TargetName="Bd">
                                            <Setter.Value>
                                                <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="TextElement.Foreground">
                                            <Setter.Value>
                                                <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground">
                                            <Setter.Value>
                                                <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </Grid>
</UserControl>
